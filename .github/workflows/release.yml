name: Release

on:
  push:
    tags: ['v*.*.*']

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag
        id: vars
        run: echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Build and push API image
        run: |
          docker build -t ghcr.io/${{ github.repository }}-api:${{ steps.vars.outputs.TAG }} -t ghcr.io/${{ github.repository }}-api:latest apps/api
          docker push ghcr.io/${{ github.repository }}-api:${{ steps.vars.outputs.TAG }}
          docker push ghcr.io/${{ github.repository }}-api:latest

      - name: Build and push Web image
        run: |
          docker build -t ghcr.io/${{ github.repository }}-web:${{ steps.vars.outputs.TAG }} -t ghcr.io/${{ github.repository }}-web:latest apps/web
          docker push ghcr.io/${{ github.repository }}-web:${{ steps.vars.outputs.TAG }}
          docker push ghcr.io/${{ github.repository }}-web:latest

  release-notes:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cli-publish:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build CLI
        run: pnpm --filter @opshub/cli build

      - name: Publish CLI to npm
        run: |
          cd packages/cli
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
